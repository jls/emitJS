{"name":"emitJS","body":"## Overview\r\n\r\nemitJS is a combination of a pub/sub system and an event emitter.  Taking some of the best parts of [js-signals](https://github.com/millermedeiros/js-signals) and the simplicity of [EventEmitter](https://github.com/Wolfy87/EventEmitter) and combining them so either (or both) pattern implementation can be used.\r\n\r\n## Simple Emitter Example\r\n\r\n```javascript\r\n  // Create an emitter.\r\n  var emitter = new emit.EventEmitter();\r\n  \r\n  // Add a listener to the emitter.\r\n  emitter.add('userCreated', function(){console.log('user has been created');});\r\n  \r\n  // Add another listener to the emitter.\r\n  emitter.add('userCreated', function(){alert('user has been created');});\r\n  \r\n  // Emit the event\r\n  emitter.emit('userCreated');\r\n  // => Alert shown displaying 'user has been created';\r\n  // => console message logged 'user has been created';\r\n```\r\n  \r\n## Simple Binding Example\r\n\r\n```javascript\r\n  // Create the event bindings.\r\n  var my = {\r\n    events: {\r\n      userCreated: new emit.Binding(),\r\n      userRemoved: new emit.Binding()\r\n    }\r\n  };\r\n  \r\n  // Add a listener to the userCreated binding.\r\n  my.events.userCreated.add(function(){console.log('user has been created');});\r\n  \r\n  // Emit the userCreated event.\r\n  my.events.userCreated.emit();\r\n  // => console message logged 'user has been created'\r\n```\r\n\r\n## More Examples\r\n\r\nTo see more examples please see the [Examples Page](https://github.com/jls/emitJS/wiki/Examples) in the wiki.\r\n\r\n## Should I use Emitter or Binding?\r\n\r\nShort answer is whichever you want.  Both have their pros and cons and Miller Medeiros has a great write up here [comparison between different observer pattern implmentations](https://github.com/millermedeiros/js-signals/wiki/Comparison-between-different-Observer-Pattern-implementations).\r\n\r\nI tend to prefer the binding implementation just because it works well with auto complete and my tests will complain when I try and emit or subscribe to the wrong event. ","tagline":"JavaScript event system that includes both a Pub/Sub and Emitter implementation.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}